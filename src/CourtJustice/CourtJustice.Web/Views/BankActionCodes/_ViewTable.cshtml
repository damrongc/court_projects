@using CourtJustice.Domain.ViewModels
@model IEnumerable<BankActionCodeViewModel>


<div class="table-responsive">
    <table class="table table-bordered table-hover data-table">
        <thead>
            <tr class="bg-primary text-white" role="row">
                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.EmployerName)
                </th>
                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.BankActionCodeId)
                </th>
                <th class="text-nowrap">
                    @Html.DisplayNameFor(model => model.BankActionCodeName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BankPersonCodes)
                </th>
                <th>

                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="w150">
                        @Html.DisplayFor(modelItem => item.EmployerName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankActionCodeId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.BankActionCodeName)
                    </td>
                    <td>
                        <a class="btn btn-info text-white btn-sm" onclick="showInPopup('@Url.Action("CreatePersonCode","BankActionCodes"
                            ,new {id= item.BankActionId}
                            ,Context.Request.Scheme)'
                            ,'เพิ่ม Person Code')"><i class="fa fa-plus"></i> </a>
                        @foreach (var personCode in item.BankPersonCodes)
                        {
                            var personName = string.Format("{0}", personCode.BankPersonCodeName);

                            var count = personCode.BankResultCodeCount;
                            @if (count == 0)
                            {
                                <a class="btn btn-sm btn-light" onclick="showInPopup('@Url.Action("EditPersonCode","BankActionCodes"
                            ,new {id=personCode.BankPersonId}
                                ,Context.Request.Scheme)'
                                ,'แก้ไข Person Code')">@personName</a>
                            }
                            else
                            {
                                <a class="btn btn-sm btn-success text-white" onclick="showInPopup('@Url.Action("EditPersonCode","BankActionCodes"
                            ,new {id=personCode.BankPersonId}
                                ,Context.Request.Scheme)'
                                ,'แก้ไข Person Code')">@personName</a>

                            }
                        }
                    </td>

                    <td class="w150">
                        <div class="d-inline">
                            <a class="btn btn-sm btn-primary text-white" asp-action="Edit" asp-route-id="@item.BankActionId"><i class='fa fa-edit'></i></a>
                            <a class="btn btn-sm btn-danger text-white" onclick="confirmDelete('@item.BankActionId');"><i class='fa fa-trash'></i></a>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<div class="modal" tabindex="-1" role="dialog" id="form-modal-result" style="z-index: 1200;">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title"></h3>
                @*   <button type="button" class="btn btn-dark text-white" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">×</span>
                </button>*@
            </div>
            <div class="modal-body">
            </div>
        </div>
    </div>
</div>